services:
  tico-nano-udp-audio-server:
    build: .
    ports:
      - "${UDP_PORT}:6980/udp"
      - "${TCP_PORT}:12345/tcp"
    environment:
      - VF_DM_API_KEY=${VF_DM_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - USE_GROQ=${USE_GROQ:-false}
      - GROQ_API_URL=${GROQ_API_URL:-https://api.groq.com/openai/v1/audio/transcriptions}
      - GROQ_MODEL=${GROQ_MODEL:-whisper-large-v3-turbo}
      - GROQ_LANGUAGE=${GROQ_LANGUAGE}
      - WHISPER_VAD_FILTER=${WHISPER_VAD_FILTER:-false}
      - WHISPER_SERVER_URL=${WHISPER_SERVER_URL:-http://whisper-asr:9000}
      - UDP_PORT=6980
      - TCP_PORT=12345
      - INCLUDE_TEXT_WITH_AUDIO=${INCLUDE_TEXT_WITH_AUDIO:-true}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.tcp-server.rule=HostSNI(`myserver.com`) && Port(12345)"
      - "traefik.tcp.routers.tcp-server.entrypoints=tcp-12345"
      - "traefik.udp.routers.udp-server.rule=HostSNI(`myserver.com`) && Port(6980)"
      - "traefik.udp.routers.udp-server.entrypoints=udp-6980"


  whisper-asr:
    profiles:
      - local-whisper
    image: onerahmet/openai-whisper-asr-webservice:latest
    expose:
      - "9000"
    environment:
      - ASR_MODEL=${WHISPER_MODEL:-base}
      - ASR_ENGINE=${WHISPER_ENGINE:-openai_whisper}
      - ASR_DEVICE=${WHISPER_DEVICE:-cpu}
    volumes:
      - whisper-cache:/root/.cache/
    restart: unless-stopped

volumes:
  whisper-cache:
    name: whisper-cache
